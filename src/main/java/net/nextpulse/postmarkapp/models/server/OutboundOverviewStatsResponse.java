/*
 * Postmark API
 * Postmark makes sending and receiving email incredibly easy. 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package net.nextpulse.postmarkapp.models.server;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-02-24T16:43:29.220+01:00")
public class OutboundOverviewStatsResponse {
  @JsonProperty("Sent")
  private Integer sent = null;

  @JsonProperty("Bounced")
  private Integer bounced = null;

  @JsonProperty("SMTPAPIErrors")
  private Integer sMTPAPIErrors = null;

  @JsonProperty("BounceRate")
  private Integer bounceRate = null;

  @JsonProperty("SpamComplaints")
  private Integer spamComplaints = null;

  @JsonProperty("SpamComplaintsRate")
  private Integer spamComplaintsRate = null;

  @JsonProperty("Opens")
  private Integer opens = null;

  @JsonProperty("UniqueOpens")
  private Integer uniqueOpens = null;

  @JsonProperty("Tracked")
  private Integer tracked = null;

  @JsonProperty("WithOpenTracking")
  private Integer withOpenTracking = null;

  @JsonProperty("WithLinkTracking")
  private Integer withLinkTracking = null;

  @JsonProperty("TotalClicks")
  private Integer totalClicks = null;

  @JsonProperty("UniqueLinksClicked")
  private Integer uniqueLinksClicked = null;

  @JsonProperty("TotalTrackedLinksSent")
  private Integer totalTrackedLinksSent = null;

  @JsonProperty("WithClientRecorded")
  private Integer withClientRecorded = null;

  @JsonProperty("WithPlatformRecorded")
  private Integer withPlatformRecorded = null;

  @JsonProperty("WithReadTimeRecorded")
  private Integer withReadTimeRecorded = null;

  public OutboundOverviewStatsResponse sent(Integer sent) {
    this.sent = sent;
    return this;
  }

   /**
   * Get sent
   * @return sent
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getSent() {
    return sent;
  }

  public void setSent(Integer sent) {
    this.sent = sent;
  }

  public OutboundOverviewStatsResponse bounced(Integer bounced) {
    this.bounced = bounced;
    return this;
  }

   /**
   * Get bounced
   * @return bounced
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getBounced() {
    return bounced;
  }

  public void setBounced(Integer bounced) {
    this.bounced = bounced;
  }

  public OutboundOverviewStatsResponse sMTPAPIErrors(Integer sMTPAPIErrors) {
    this.sMTPAPIErrors = sMTPAPIErrors;
    return this;
  }

   /**
   * Get sMTPAPIErrors
   * @return sMTPAPIErrors
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getSMTPAPIErrors() {
    return sMTPAPIErrors;
  }

  public void setSMTPAPIErrors(Integer sMTPAPIErrors) {
    this.sMTPAPIErrors = sMTPAPIErrors;
  }

  public OutboundOverviewStatsResponse bounceRate(Integer bounceRate) {
    this.bounceRate = bounceRate;
    return this;
  }

   /**
   * Get bounceRate
   * @return bounceRate
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getBounceRate() {
    return bounceRate;
  }

  public void setBounceRate(Integer bounceRate) {
    this.bounceRate = bounceRate;
  }

  public OutboundOverviewStatsResponse spamComplaints(Integer spamComplaints) {
    this.spamComplaints = spamComplaints;
    return this;
  }

   /**
   * Get spamComplaints
   * @return spamComplaints
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getSpamComplaints() {
    return spamComplaints;
  }

  public void setSpamComplaints(Integer spamComplaints) {
    this.spamComplaints = spamComplaints;
  }

  public OutboundOverviewStatsResponse spamComplaintsRate(Integer spamComplaintsRate) {
    this.spamComplaintsRate = spamComplaintsRate;
    return this;
  }

   /**
   * Get spamComplaintsRate
   * @return spamComplaintsRate
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getSpamComplaintsRate() {
    return spamComplaintsRate;
  }

  public void setSpamComplaintsRate(Integer spamComplaintsRate) {
    this.spamComplaintsRate = spamComplaintsRate;
  }

  public OutboundOverviewStatsResponse opens(Integer opens) {
    this.opens = opens;
    return this;
  }

   /**
   * Get opens
   * @return opens
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getOpens() {
    return opens;
  }

  public void setOpens(Integer opens) {
    this.opens = opens;
  }

  public OutboundOverviewStatsResponse uniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
    return this;
  }

   /**
   * Get uniqueOpens
   * @return uniqueOpens
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getUniqueOpens() {
    return uniqueOpens;
  }

  public void setUniqueOpens(Integer uniqueOpens) {
    this.uniqueOpens = uniqueOpens;
  }

  public OutboundOverviewStatsResponse tracked(Integer tracked) {
    this.tracked = tracked;
    return this;
  }

   /**
   * Get tracked
   * @return tracked
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTracked() {
    return tracked;
  }

  public void setTracked(Integer tracked) {
    this.tracked = tracked;
  }

  public OutboundOverviewStatsResponse withOpenTracking(Integer withOpenTracking) {
    this.withOpenTracking = withOpenTracking;
    return this;
  }

   /**
   * Get withOpenTracking
   * @return withOpenTracking
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWithOpenTracking() {
    return withOpenTracking;
  }

  public void setWithOpenTracking(Integer withOpenTracking) {
    this.withOpenTracking = withOpenTracking;
  }

  public OutboundOverviewStatsResponse withLinkTracking(Integer withLinkTracking) {
    this.withLinkTracking = withLinkTracking;
    return this;
  }

   /**
   * Get withLinkTracking
   * @return withLinkTracking
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWithLinkTracking() {
    return withLinkTracking;
  }

  public void setWithLinkTracking(Integer withLinkTracking) {
    this.withLinkTracking = withLinkTracking;
  }

  public OutboundOverviewStatsResponse totalClicks(Integer totalClicks) {
    this.totalClicks = totalClicks;
    return this;
  }

   /**
   * Get totalClicks
   * @return totalClicks
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTotalClicks() {
    return totalClicks;
  }

  public void setTotalClicks(Integer totalClicks) {
    this.totalClicks = totalClicks;
  }

  public OutboundOverviewStatsResponse uniqueLinksClicked(Integer uniqueLinksClicked) {
    this.uniqueLinksClicked = uniqueLinksClicked;
    return this;
  }

   /**
   * Get uniqueLinksClicked
   * @return uniqueLinksClicked
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getUniqueLinksClicked() {
    return uniqueLinksClicked;
  }

  public void setUniqueLinksClicked(Integer uniqueLinksClicked) {
    this.uniqueLinksClicked = uniqueLinksClicked;
  }

  public OutboundOverviewStatsResponse totalTrackedLinksSent(Integer totalTrackedLinksSent) {
    this.totalTrackedLinksSent = totalTrackedLinksSent;
    return this;
  }

   /**
   * Get totalTrackedLinksSent
   * @return totalTrackedLinksSent
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getTotalTrackedLinksSent() {
    return totalTrackedLinksSent;
  }

  public void setTotalTrackedLinksSent(Integer totalTrackedLinksSent) {
    this.totalTrackedLinksSent = totalTrackedLinksSent;
  }

  public OutboundOverviewStatsResponse withClientRecorded(Integer withClientRecorded) {
    this.withClientRecorded = withClientRecorded;
    return this;
  }

   /**
   * Get withClientRecorded
   * @return withClientRecorded
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWithClientRecorded() {
    return withClientRecorded;
  }

  public void setWithClientRecorded(Integer withClientRecorded) {
    this.withClientRecorded = withClientRecorded;
  }

  public OutboundOverviewStatsResponse withPlatformRecorded(Integer withPlatformRecorded) {
    this.withPlatformRecorded = withPlatformRecorded;
    return this;
  }

   /**
   * Get withPlatformRecorded
   * @return withPlatformRecorded
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWithPlatformRecorded() {
    return withPlatformRecorded;
  }

  public void setWithPlatformRecorded(Integer withPlatformRecorded) {
    this.withPlatformRecorded = withPlatformRecorded;
  }

  public OutboundOverviewStatsResponse withReadTimeRecorded(Integer withReadTimeRecorded) {
    this.withReadTimeRecorded = withReadTimeRecorded;
    return this;
  }

   /**
   * Get withReadTimeRecorded
   * @return withReadTimeRecorded
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getWithReadTimeRecorded() {
    return withReadTimeRecorded;
  }

  public void setWithReadTimeRecorded(Integer withReadTimeRecorded) {
    this.withReadTimeRecorded = withReadTimeRecorded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutboundOverviewStatsResponse outboundOverviewStatsResponse = (OutboundOverviewStatsResponse) o;
    return Objects.equals(this.sent, outboundOverviewStatsResponse.sent) &&
        Objects.equals(this.bounced, outboundOverviewStatsResponse.bounced) &&
        Objects.equals(this.sMTPAPIErrors, outboundOverviewStatsResponse.sMTPAPIErrors) &&
        Objects.equals(this.bounceRate, outboundOverviewStatsResponse.bounceRate) &&
        Objects.equals(this.spamComplaints, outboundOverviewStatsResponse.spamComplaints) &&
        Objects.equals(this.spamComplaintsRate, outboundOverviewStatsResponse.spamComplaintsRate) &&
        Objects.equals(this.opens, outboundOverviewStatsResponse.opens) &&
        Objects.equals(this.uniqueOpens, outboundOverviewStatsResponse.uniqueOpens) &&
        Objects.equals(this.tracked, outboundOverviewStatsResponse.tracked) &&
        Objects.equals(this.withOpenTracking, outboundOverviewStatsResponse.withOpenTracking) &&
        Objects.equals(this.withLinkTracking, outboundOverviewStatsResponse.withLinkTracking) &&
        Objects.equals(this.totalClicks, outboundOverviewStatsResponse.totalClicks) &&
        Objects.equals(this.uniqueLinksClicked, outboundOverviewStatsResponse.uniqueLinksClicked) &&
        Objects.equals(this.totalTrackedLinksSent, outboundOverviewStatsResponse.totalTrackedLinksSent) &&
        Objects.equals(this.withClientRecorded, outboundOverviewStatsResponse.withClientRecorded) &&
        Objects.equals(this.withPlatformRecorded, outboundOverviewStatsResponse.withPlatformRecorded) &&
        Objects.equals(this.withReadTimeRecorded, outboundOverviewStatsResponse.withReadTimeRecorded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sent, bounced, sMTPAPIErrors, bounceRate, spamComplaints, spamComplaintsRate, opens, uniqueOpens, tracked, withOpenTracking, withLinkTracking, totalClicks, uniqueLinksClicked, totalTrackedLinksSent, withClientRecorded, withPlatformRecorded, withReadTimeRecorded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutboundOverviewStatsResponse {\n");
    
    sb.append("    sent: ").append(toIndentedString(sent)).append("\n");
    sb.append("    bounced: ").append(toIndentedString(bounced)).append("\n");
    sb.append("    sMTPAPIErrors: ").append(toIndentedString(sMTPAPIErrors)).append("\n");
    sb.append("    bounceRate: ").append(toIndentedString(bounceRate)).append("\n");
    sb.append("    spamComplaints: ").append(toIndentedString(spamComplaints)).append("\n");
    sb.append("    spamComplaintsRate: ").append(toIndentedString(spamComplaintsRate)).append("\n");
    sb.append("    opens: ").append(toIndentedString(opens)).append("\n");
    sb.append("    uniqueOpens: ").append(toIndentedString(uniqueOpens)).append("\n");
    sb.append("    tracked: ").append(toIndentedString(tracked)).append("\n");
    sb.append("    withOpenTracking: ").append(toIndentedString(withOpenTracking)).append("\n");
    sb.append("    withLinkTracking: ").append(toIndentedString(withLinkTracking)).append("\n");
    sb.append("    totalClicks: ").append(toIndentedString(totalClicks)).append("\n");
    sb.append("    uniqueLinksClicked: ").append(toIndentedString(uniqueLinksClicked)).append("\n");
    sb.append("    totalTrackedLinksSent: ").append(toIndentedString(totalTrackedLinksSent)).append("\n");
    sb.append("    withClientRecorded: ").append(toIndentedString(withClientRecorded)).append("\n");
    sb.append("    withPlatformRecorded: ").append(toIndentedString(withPlatformRecorded)).append("\n");
    sb.append("    withReadTimeRecorded: ").append(toIndentedString(withReadTimeRecorded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

